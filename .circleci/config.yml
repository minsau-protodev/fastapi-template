version: 2.1

executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch

orbs:
  python: circleci/python@2.0.3

jobs:
  test:
    docker:
      - image: cimg/python:3.10
        environment:
          POSTGRES_DB: "test"
          POSTGRES_USER: "test"
          POSTGRES_PASSWORD: "test"
          POSTGRES_SERVER: "localhost"
          POSTGRES_PORT: 5432
          SENTRY_DSN: http://YourSentryDSN.com
          FIRST_SUPERUSER: admin@yourproject.com
          FIRST_SUPERUSER_PASSWORD: admin
          CELERY_BROKER_URL: redis://redis:6379/0
          CELERY_RESULT_BACKEND: redis://redis:6379/0

      - image: cimg/postgres:13.7
        environment:
          POSTGRES_DB: "test"
          POSTGRES_USER: "test"
          POSTGRES_PASSWORD: "test"

    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          command: |
            mkdir test-results
            poetry run pytest . -p no:warnings --junitxml=test-results/junit.xml
          name: Run tests

      - store_test_results:
          path: test-results

  lint:
    docker:
      - image: cimg/python:3.10

    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry

      - run:
          name: Run pre commit install
          command: poetry run pre-commit install

      - run:
          name: Run pre commit check
          command: poetry run pre-commit run -a

  build-core:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_OWNER/$CORE_IMAGE_NAME:$TAG .
      - run:
          name: Persist Docker image
          command: docker save -o core-image.tar $IMAGE_OWNER/$CORE_IMAGE_NAME:$TAG
      - persist_to_workspace:
          root: .
          paths:
            - ./core-image.tar

  build-celery:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -f Dockerfile.deploy -t $IMAGE_OWNER/$CELERY_IMAGE_NAME:$TAG .
      - run:
          name: Persist Docker image
          command: docker save -o celery-image.tar $IMAGE_OWNER/$CELERY_IMAGE_NAME:$TAG
      - persist_to_workspace:
          root: .
          paths:
            - ./celery-image.tar

  publish-latest-core:
    executor: docker-publisher

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/core-image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_OWNER/$CORE_IMAGE_NAME:$TAG

  publish-latest-celery:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/celery-image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_OWNER/$CELERY_IMAGE_NAME:$TAG

workflows:
  common:
    jobs:
      - lint
      - test
      - build-core:
          requires:
            - lint
            - test
          filters:
              branches:
                only:
                  - main
      - build-celery:
          requires:
            - lint
            - test
          filters:
              branches:
                only:
                  - main
      - publish-latest-core:
          requires:
            - build-core
          filters:
              branches:
                only:
                  - main
      - publish-latest-celery:
          requires:
            - build-celery
          filters:
              branches:
                only:
                  - main
